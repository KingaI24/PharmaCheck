{"version":3,"sources":["./src/app/pharmacies/pharmacies.component.html","./src/app/pharmacies/pharmacy-edit/pharmacy-edit.component.html","./src/app/pharmacies/pharmacy-list/pharmacy-list.component.html","./src/app/pharmacies/pharmacies-routing.module.ts","./src/app/pharmacies/pharmacies.component.css","./src/app/pharmacies/pharmacies.component.ts","./src/app/pharmacies/pharmacies.module.ts","./src/app/pharmacies/pharmacy-edit/pharmacy-edit.component.css","./src/app/pharmacies/pharmacy-edit/pharmacy-edit.component.ts","./src/app/pharmacies/pharmacy-list/pharmacy-list.component.css","./src/app/pharmacies/pharmacy-list/pharmacy-list.component.ts","./src/app/pharmacies/pharmacy.service.ts"],"names":[],"mappings":"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","file":"pharmacies-pharmacies-module.js","sourcesContent":["export default \"<router-outlet></router-outlet>\\r\\n\"","export default \"<h1>\\r\\n    Add/Edit pharmacy\\r\\n</h1>\\r\\n\\r\\n<mat-card class=\\\"example-card\\\">\\r\\n    <form *ngIf=\\\"formGroup\\\" [formGroup]=\\\"formGroup\\\">\\r\\n        <div class=\\\"example-container\\\">\\r\\n            <mat-form-field>\\r\\n                <input matInput placeholder=\\\"Name\\\" formControlName=\\\"name\\\" type=\\\"text\\\">\\r\\n                <mat-error *ngIf=\\\"formGroup.get('name').touched &&\\r\\n                           formGroup.get('name').errors &&\\r\\n                           formGroup.get('name').errors.required\\\">\\r\\n                    Name required!\\r\\n                </mat-error>\\r\\n            </mat-form-field>\\r\\n\\r\\n            <mat-form-field>\\r\\n                <input matInput placeholder=\\\"Address\\\" formControlName=\\\"addresses\\\" type=\\\"text\\\">\\r\\n                <mat-error *ngIf=\\\"formGroup.get('addresses').touched &&\\r\\n                           formGroup.get('addresses').errors &&\\r\\n                           formGroup.get('addresses').errors.required\\\">\\r\\n                    Address required!\\r\\n                </mat-error>\\r\\n            </mat-form-field>\\r\\n\\r\\n            <div formArrayName=\\\"addresses\\\">\\r\\n                <div *ngFor=\\\"let a of formGroup.controls.addresses.controls; let i=index\\\">\\r\\n                    <div [formGroupName]='i' class=\\\"form-control\\\">\\r\\n                        <input type=\\\"text\\\" formControlName='{{a}}'>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n\\r\\n            <div class=\\\"example-button-row\\\">\\r\\n                <button mat-raised-button color=\\\"primary\\\" (click)=\\\"save()\\\">Save</button>\\r\\n                <button mat-raised-button color=\\\"primary\\\" [routerLink]='routerLink'>Cancel</button>\\r\\n            </div>\\r\\n        </div>\\r\\n</form>\\r\\n</mat-card>\\r\\n\"","export default \"<mat-paginator [length]=\\\"pharmacies?.totalItems\\\"\\r\\n               [pageSize]=\\\"pharmacies?.itemsPerPage\\\"\\r\\n               [pageSizeOptions]=\\\"[3,6]\\\"\\r\\n               (page)=\\\"pageEvent = loadPharmacies($event)\\\">\\r\\n</mat-paginator>\\r\\n\\r\\n<table mat-table [dataSource]=\\\"pharmacies?.items\\\" class=\\\"mat-elevation-z8\\\">\\r\\n\\r\\n    <!--- Note that these columns can be defined in any order.\\r\\n          The actual rendered columns are set as a property on the row definition\\\" -->\\r\\n    <!-- Position Column -->\\r\\n    <ng-container matColumnDef=\\\"name\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef style=\\\"width:21%\\\"> Name </th>\\r\\n        <td mat-cell *matCellDef=\\\"let pharmacy\\\"> {{pharmacy.name}} </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- Action Column -->\\r\\n    <ng-container matColumnDef=\\\"action\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef style=\\\"width:10%\\\"> Action </th>\\r\\n        <td mat-cell *matCellDef=\\\"let pharmacy\\\">\\r\\n            <button mat-icon-button matTooltip=\\\"Edit\\\" [matTooltipPosition]=\\\"'after'\\\">\\r\\n                <mat-icon aria-label=\\\"Example icon-button with a heart icon\\\" [routerLink]=\\\"['../edit', pharmacy.id]\\\">edit</mat-icon>\\r\\n            </button>\\r\\n\\r\\n            <button mat-icon-button matTooltip=\\\"Delete\\\" [matTooltipPosition]=\\\"'after'\\\">\\r\\n                <mat-icon aria-label=\\\"Example icon-button with a heart icon \\\" (click)=\\\"delete(pharmacy)\\\">delete</mat-icon>\\r\\n            </button>\\r\\n\\r\\n        </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- Address Column -->\\r\\n    <ng-container matColumnDef=\\\"address\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef style=\\\"width:23%\\\"> Address </th>\\r\\n        <td mat-cell *matCellDef=\\\"let pharmacy\\\">\\r\\n            <mat-list *ngFor=\\\"let address of pharmacy.addresses\\\">\\r\\n                <mat-list-item>{{address.description}}</mat-list-item>\\r\\n                <mat-divider></mat-divider>\\r\\n            </mat-list>\\r\\n        </td>\\r\\n    </ng-container>\\r\\n\\r\\n\\r\\n    <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n    <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n</table>\\r\\n\\r\\n<div class=\\\"example-button-row\\\">\\r\\n    <button mat-raised-button [routerLink]='[\\\"../edit\\\"]' class=\\\"btn btn-dark\\\"><b>+</b></button>\\r\\n</div>\\r\\n\"","import { NgModule } from '@angular/core';\r\nimport { PharmacyEditComponent } from './pharmacy-edit/pharmacy-edit.component';\r\nimport { PharmacyListComponent } from './pharmacy-list/pharmacy-list.component';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { PharmaciesComponent } from './pharmacies.component';\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: '', component: PharmaciesComponent,\r\n        children: [\r\n            { path: '', redirectTo: 'list', pathMatch: 'full' },\r\n            { path: 'list', component: PharmacyListComponent },\r\n            { path: 'edit/:id', component: PharmacyEditComponent },\r\n            { path: 'edit', component: PharmacyEditComponent },\r\n        ]\r\n    }\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule]\r\n})\r\n\r\nexport class PharmaciesRoutingModule {\r\n    static routedComponents = [PharmaciesComponent, PharmacyListComponent, PharmacyEditComponent];\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BoYXJtYWNpZXMvcGhhcm1hY2llcy5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-pharmacies',\n  templateUrl: './pharmacies.component.html',\n  styleUrls: ['./pharmacies.component.css']\n})\nexport class PharmaciesComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { PharmaciesRoutingModule } from './pharmacies-routing.module';\r\nimport { AngularMaterialModule } from '../shared/angular-material.module';\r\nimport { CoreModule } from '../core/core.module';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { PharmacyService } from './pharmacy.service';\r\n\r\n@NgModule({\r\n    declarations: [PharmaciesRoutingModule.routedComponents],\r\n    imports: [\r\n        CommonModule,\r\n        PharmaciesRoutingModule,\r\n        AngularMaterialModule,\r\n        CoreModule,\r\n        FormsModule,\r\n        ReactiveFormsModule\r\n    ],\r\n    providers: [PharmacyService]\r\n})\r\nexport class PharmaciesModule { }\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BoYXJtYWNpZXMvcGhhcm1hY3ktZWRpdC9waGFybWFjeS1lZGl0LmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators, FormArray, FormControl } from '@angular/forms';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { PharmacyService } from '../pharmacy.service';\r\nimport { Pharmacy } from '../pharmacy.model';\r\nimport { AddressService } from '../../addresses/address.service';\r\n\r\n@Component({\r\n  selector: 'app-pharmacy-edit',\r\n  templateUrl: './pharmacy-edit.component.html',\r\n    styleUrls: ['./pharmacy-edit.component.css']\r\n})\r\nexport class PharmacyEditComponent implements OnInit {\r\n\r\n    private routerLink: string = '../list';\r\n\r\n    private pharmid: number;\r\n\r\n    private isEdit: boolean = false;\r\n\r\n    public formGroup: FormGroup;\r\n\r\n    public addresses: FormArray;\r\n\r\n    constructor(\r\n        private router: Router,\r\n        private route: ActivatedRoute,\r\n        private pharmacyService: PharmacyService,\r\n        private formBuilder: FormBuilder) { }\r\n\r\n    ngOnInit() {\r\n\r\n        this.pharmid = parseInt(this.route.snapshot.params['id']);\r\n\r\n        if (this.pharmid) {\r\n            this.routerLink = '../../list';\r\n\r\n            this.pharmacyService.getPharmacy(this.pharmid).subscribe(res => {\r\n                this.initForm(res);\r\n                this.isEdit = true;\r\n            });\r\n        }\r\n        else {\r\n            this.initFormForSave(<Pharmacy>{});\r\n        }\r\n\r\n    }\r\n\r\n    save() {\r\n        Object.keys(this.formGroup.controls).forEach(control => {\r\n            this.formGroup.get(control).markAsTouched();\r\n        });\r\n\r\n        if (this.formGroup.valid) {\r\n            let pharmacy = this.formGroup.value as Pharmacy;\r\n\r\n            if (this.isEdit) {\r\n                pharmacy.id = this.pharmid;\r\n\r\n                this.pharmacyService.update(pharmacy).subscribe(res => {\r\n                    this.router.navigate(['/pharmacies']);\r\n                });\r\n            } else {\r\n\r\n                this.pharmacyService.save(pharmacy).subscribe(res => {\r\n                    this.router.navigate(['/pharmacies']);\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    initForm(pharmacy: Pharmacy) {\r\n        this.formGroup = this.formBuilder.group({\r\n            name: [pharmacy.name, Validators.required],\r\n            addresses: this.formBuilder.array(this.loadAddresses(pharmacy))\r\n        });\r\n        console.log(this.loadAddresses(pharmacy));\r\n        console.log(this.formGroup);\r\n    }\r\n\r\n    loadAddresses(pharmacy: Pharmacy) {\r\n        return pharmacy.addresses.map(p => this.formBuilder.group({\r\n            description: p.description\r\n        }));\r\n    }\r\n\r\n    initFormForSave(pharmacy: Pharmacy) {\r\n        this.formGroup = this.formBuilder.group({\r\n            name: [\"\", Validators.required],\r\n            //addresses: this.formBuilder.array(this.addAddresses(pharmacy.addresses))\r\n        });\r\n    }\r\n\r\n    addAddresses() {\r\n        this.addresses.push(this.formBuilder.control(''));\r\n    }\r\n\r\n\r\n}\r\n","export default \".button {\\r\\n    background-color: #ddd;\\r\\n    border: none;\\r\\n    color: black;\\r\\n    padding: 10px 20px;\\r\\n    text-align: center;\\r\\n    text-decoration: none;\\r\\n    display: inline-block;\\r\\n    margin: 4px 2px;\\r\\n    cursor: pointer;\\r\\n    border-radius: 16px;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGhhcm1hY2llcy9waGFybWFjeS1saXN0L3BoYXJtYWN5LWxpc3QuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLHNCQUFzQjtJQUN0QixZQUFZO0lBQ1osWUFBWTtJQUNaLGtCQUFrQjtJQUNsQixrQkFBa0I7SUFDbEIscUJBQXFCO0lBQ3JCLHFCQUFxQjtJQUNyQixlQUFlO0lBQ2YsZUFBZTtJQUNmLG1CQUFtQjtBQUN2QiIsImZpbGUiOiJzcmMvYXBwL3BoYXJtYWNpZXMvcGhhcm1hY3ktbGlzdC9waGFybWFjeS1saXN0LmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuYnV0dG9uIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICNkZGQ7XHJcbiAgICBib3JkZXI6IG5vbmU7XHJcbiAgICBjb2xvcjogYmxhY2s7XHJcbiAgICBwYWRkaW5nOiAxMHB4IDIwcHg7XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XHJcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgICBtYXJnaW46IDRweCAycHg7XHJcbiAgICBjdXJzb3I6IHBvaW50ZXI7XHJcbiAgICBib3JkZXItcmFkaXVzOiAxNnB4O1xyXG59XHJcbiJdfQ== */\"","import { Component, OnInit } from '@angular/core';\r\nimport { Pharmacy } from '../pharmacy.model';\r\nimport { PharmacyService } from '../pharmacy.service';\r\nimport { PageEvent } from '@angular/material/paginator';\r\nimport { Router } from '@angular/router';\r\nimport { PaginatedPharmacyView } from '../paginatedPharmacyView';\r\n\r\n@Component({\r\n    selector: 'app-pharmacy-list',\r\n    templateUrl: './pharmacy-list.component.html',\r\n    styleUrls: ['./pharmacy-list.component.css']\r\n})\r\nexport class PharmacyListComponent implements OnInit {\r\n\r\n    displayedColumns: string[] = ['name', 'action', 'address'];\r\n    pharmacies: PaginatedPharmacyView;\r\n    pageEvent: PageEvent;\r\n\r\n    constructor(private pharmacyService: PharmacyService, private router: Router) { }\r\n\r\n    ngOnInit() {\r\n        this.loadPharmacies(null);\r\n    }\r\n\r\n    loadPharmacies(event?: PageEvent) {\r\n        this.pharmacyService.getPharmacies(event)\r\n            .subscribe(res => {\r\n                this.pharmacies = res;\r\n                console.log(this.pharmacies.items);\r\n        });\r\n    }\r\n\r\n    delete(pharmacy: Pharmacy) {\r\n        this.pharmacyService.delete(pharmacy.id).subscribe(x => {\r\n            this.loadPharmacies();\r\n        });\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Pharmacy } from './pharmacy.model';\r\nimport { Observable } from 'rxjs';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { ApplicationService } from '../core/services/application.service';\r\nimport { PaginatedPharmacyView } from './paginatedPharmacyView';\r\nimport { PageEvent } from '@angular/material/paginator';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PharmacyService {\r\n\r\n    constructor(private httpClient: HttpClient, private applicationService: ApplicationService) {\r\n    }\r\n\r\n    getPharmacies(event?: PageEvent): Observable<PaginatedPharmacyView> {\r\n        let pageIndex = event ? event.pageIndex + \"\" : \"0\";\r\n        let itemsPerPage = event ? event.pageSize + \"\" : \"3\";\r\n        let params = new HttpParams().set(\"page\", pageIndex).set(\"itemsPerPage\", itemsPerPage); //Create new HttpParams\r\n        return this.httpClient.\r\n            get<PaginatedPharmacyView>(`${this.applicationService.baseUrl}api/pharmacy`, { params: params });\r\n    }\r\n\r\n    getPharmacy(id: number): Observable<Pharmacy> {\r\n        return this.httpClient\r\n            .get<Pharmacy>(`${this.applicationService.baseUrl}api/pharmacy/${id}`);\r\n    }\r\n\r\n    save(pharmacy: Pharmacy): Observable<Pharmacy> {\r\n        return this.httpClient\r\n            .post<Pharmacy>(`${this.applicationService.baseUrl}api/pharmacy`, pharmacy);\r\n    }\r\n\r\n    update(pharmacy: Pharmacy): Observable<Pharmacy> {\r\n        return this.httpClient\r\n            .put<Pharmacy>(`${this.applicationService.baseUrl}api/pharmacy/${pharmacy.id}`, pharmacy);\r\n    }\r\n\r\n    delete(id: number): Observable<any> {\r\n        return this.httpClient\r\n            .delete<Pharmacy>(`${this.applicationService.baseUrl}api/pharmacy/${id}`);\r\n    }\r\n\r\n    filter(name: string): Observable<PaginatedPharmacyView> {\r\n        if (!name) name = \"\";\r\n        return this.httpClient.get<PaginatedPharmacyView>(`${this.applicationService.baseUrl}api/pharmacy?name=${name}`);\r\n    }\r\n}\r\n"],"sourceRoot":"webpack:///"}