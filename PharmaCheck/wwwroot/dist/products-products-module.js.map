{"version":3,"sources":["./src/app/products/product-edit/product-edit.component.html","./src/app/products/product-list/product-list.component.html","./src/app/products/products.component.html","./src/app/products/product-edit/product-edit.component.css","./src/app/products/product-edit/product-edit.component.ts","./src/app/products/product-list/product-list.component.css","./src/app/products/product-list/product-list.component.ts","./src/app/products/product.service.ts","./src/app/products/products-routing.module.ts","./src/app/products/products.component.css","./src/app/products/products.component.ts","./src/app/products/products.module.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAe,utDAAwpD,kBAAkB,qYAAqY,qBAAqB,q6B;;;;;;;;;;;;ACAnlE;AAAe,ujBAAwf,cAAc,6OAA6O,yBAAyB,0NAA0N,gBAAgB,oOAAoO,qBAAqB,+OAA+O,wBAAwB,8OAA8O,uBAAuB,6NAA6N,aAAa,05BAA05B,2BAA2B,wL;;;;;;;;;;;;ACAz6F;AAAe,oG;;;;;;;;;;;;ACAf;AAAe,6GAA8C,uK;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAX;AACkB;AACX;AACL;AAQpD,IAAa,oBAAoB,GAAjC,MAAa,oBAAoB;IA4B7B,YACY,MAAc,EACd,KAAqB,EACrB,cAA8B,EAC9B,WAAwB;QAHxB,WAAM,GAAN,MAAM,CAAQ;QACd,UAAK,GAAL,KAAK,CAAgB;QACrB,mBAAc,GAAd,cAAc,CAAgB;QAC9B,gBAAW,GAAX,WAAW,CAAa;QA9B5B,eAAU,GAAW,SAAS,CAAC;QAI/B,WAAM,GAAY,KAAK,CAAC;QAIzB,eAAU,GAAG,6DAA6D;QAE1E,iBAAY,GAAG;YAClB,EAAE,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,QAAQ,EAAE;YAC5B,EAAE,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,SAAS,EAAE;YAC7B,EAAE,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,aAAa,EAAE;YACjC,EAAE,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,YAAY,EAAE;YAChC,EAAE,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,UAAU,EAAE;YAC9B,EAAE,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,YAAY,EAAE;YAChC,EAAE,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,YAAY,EAAE;YAChC,EAAE,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE;SAC5B,CAAC;QAEK,oBAAe,GAAG;YACrB,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE,IAAI,EAAE;YAC5B,EAAE,KAAK,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE;SAC/B,CAAC;IAMsC,CAAC;IAEzC,QAAQ;QAEJ,IAAI,CAAC,MAAM,GAAG,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;QAEzD,IAAI,IAAI,CAAC,MAAM,EAAE;YACb,IAAI,CAAC,UAAU,GAAG,YAAY,CAAC;YAE/B,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;gBACxD,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;gBACnB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;YACvB,CAAC,CAAC,CAAC;SACN;aACI;YACD,IAAI,CAAC,QAAQ,CAAU,EAAE,CAAC,CAAC;SAC9B;IACL,CAAC;IAED,IAAI;QACA,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE;YACnD,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,aAAa,EAAE,CAAC;QAChD,CAAC,CAAC,CAAC;QAEH,IAAI,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE;YACtB,IAAI,OAAO,GAAG,IAAI,CAAC,SAAS,CAAC,KAAgB,CAAC;YAE9C,IAAI,IAAI,CAAC,MAAM,EAAE;gBACb,OAAO,CAAC,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC;gBAEzB,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;oBAChD,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC;gBACxC,CAAC,CAAC,CAAC;aACN;iBAAM;gBAEH,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;oBAC9C,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC;gBACxC,CAAC,CAAC,CAAC;aACN;SACJ;IACL,CAAC;IAED,QAAQ,CAAC,OAAgB;QACrB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YACpC,IAAI,EAAE,CAAC,OAAO,CAAC,IAAI,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACzC,eAAe,EAAE,CAAC,OAAO,CAAC,eAAe,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAC/D,MAAM,EAAE,CAAC,OAAO,CAAC,MAAM,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAC7C,WAAW,EAAE,CAAC,OAAO,CAAC,WAAW,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YACzD,cAAc,EAAE,CAAC,OAAO,CAAC,cAAc,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YAC/D,GAAG,EAAE,CAAC,OAAO,CAAC,GAAG,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,OAAO,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;SACjF,CAAC,CAAC;IACP,CAAC;CAGJ;;YAzDuB,sDAAM;YACP,8DAAc;YACL,+DAAc;YACjB,0DAAW;;AAhC3B,oBAAoB;IALhC,+DAAS,CAAC;QACP,QAAQ,EAAE,kBAAkB;QAC5B,2MAA4C;;KAE/C,CAAC;qCA8BsB,sDAAM;QACP,8DAAc;QACL,+DAAc;QACjB,0DAAW;GAhC3B,oBAAoB,CAsFhC;AAtFgC;;;;;;;;;;;;;ACXjC;AAAe,6GAA8C,uK;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAX;AAGE;AACX;AAQzC,IAAa,oBAAoB,GAAjC,MAAa,oBAAoB;IAO7B,YAAoB,cAA8B,EAAU,MAAc;QAAtD,mBAAc,GAAd,cAAc,CAAgB;QAAU,WAAM,GAAN,MAAM,CAAQ;QAL1E,qBAAgB,GAAa,CAAC,MAAM,EAAE,iBAAiB,EAAE,QAAQ,EAAE,aAAa;YAC5E,gBAAgB,EAAE,eAAe,EAAE,KAAK,EAAE,QAAQ,CAAC,CAAC;IAIsB,CAAC;IAE/E,QAAQ;QACJ,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;IAC5B,CAAC;IAED,YAAY,CAAC,KAAiB;QAC1B,IAAI,CAAC,cAAc,CAAC,WAAW,CAAC,KAAK,CAAC;aACjC,SAAS,CAAC,GAAG,CAAC,EAAE;YACb,IAAI,CAAC,QAAQ,GAAG,GAAG,CAAC;YACpB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;QACrC,CAAC,CAAC,CAAC;IACX,CAAC;IAED,MAAM,CAAC,OAAgB;QACnB,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE;YACjD,IAAI,CAAC,YAAY,EAAE,CAAC;QACxB,CAAC,CAAC,CAAC;IACP,CAAC;CAEJ;;YApBuC,+DAAc;YAAkB,sDAAM;;AAPjE,oBAAoB;IALhC,+DAAS,CAAC;QACT,QAAQ,EAAE,kBAAkB;QAC1B,2MAA4C;;KAE/C,CAAC;qCAQsC,+DAAc,EAAkB,sDAAM;GAPjE,oBAAoB,CA2BhC;AA3BgC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACZU;AACmB;AACY;AAS1E,IAAa,cAAc,GAA3B,MAAa,cAAc;IAEvB,YAAoB,UAAsB,EAAU,kBAAsC;QAAtE,eAAU,GAAV,UAAU,CAAY;QAAU,uBAAkB,GAAlB,kBAAkB,CAAoB;IAC1F,CAAC;IAED,WAAW,CAAC,KAAiB;QACzB,IAAI,SAAS,GAAG,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,SAAS,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC;QACnD,IAAI,YAAY,GAAG,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,QAAQ,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC;QACrD,IAAI,MAAM,GAAG,IAAI,+DAAU,EAAE,CAAC,GAAG,CAAC,MAAM,EAAE,SAAS,CAAC,CAAC,GAAG,CAAC,cAAc,EAAE,YAAY,CAAC,CAAC,CAAC,uBAAuB;QAC/G,OAAO,IAAI,CAAC,UAAU;YAClB,GAAG,CAAuB,GAAG,IAAI,CAAC,kBAAkB,CAAC,OAAO,aAAa,EAAE,EAAE,MAAM,EAAE,MAAM,EAAE,CAAC,CAAC;IACvG,CAAC;IAED,UAAU,CAAC,EAAU;QACjB,OAAO,IAAI,CAAC,UAAU;aACjB,GAAG,CAAU,GAAG,IAAI,CAAC,kBAAkB,CAAC,OAAO,eAAe,EAAE,EAAE,CAAC,CAAC;IAC7E,CAAC;IAED,IAAI,CAAC,OAAgB;QACjB,OAAO,IAAI,CAAC,UAAU;aACjB,IAAI,CAAU,GAAG,IAAI,CAAC,kBAAkB,CAAC,OAAO,aAAa,EAAE,OAAO,CAAC,CAAC;IACjF,CAAC;IAED,MAAM,CAAC,OAAgB;QACnB,OAAO,IAAI,CAAC,UAAU;aACjB,GAAG,CAAU,GAAG,IAAI,CAAC,kBAAkB,CAAC,OAAO,eAAe,OAAO,CAAC,EAAE,EAAE,EAAE,OAAO,CAAC,CAAC;IAC9F,CAAC;IAED,MAAM,CAAC,EAAU;QACb,OAAO,IAAI,CAAC,UAAU;aACjB,MAAM,CAAU,GAAG,IAAI,CAAC,kBAAkB,CAAC,OAAO,eAAe,EAAE,EAAE,CAAC,CAAC;IAChF,CAAC;IAED,MAAM,CAAC,SAAiB;QACpB,IAAI,CAAC,SAAS;YAAE,SAAS,GAAG,EAAE,CAAC;QAC/B,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAuB,GAAG,IAAI,CAAC,kBAAkB,CAAC,OAAO,oBAAoB,IAAI,EAAE,CAAC,CAAC;IACnH,CAAC;CACJ;;YAnCmC,+DAAU;YAA8B,qFAAkB;;AAFjF,cAAc;IAH1B,gEAAU,CAAC;QACV,UAAU,EAAE,MAAM;KACnB,CAAC;qCAGkC,+DAAU,EAA8B,qFAAkB;GAFjF,cAAc,CAqC1B;AArC0B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACXc;AAEoC;AACA;AACtB;AACE;AAEzD,MAAM,MAAM,GAAW;IACnB;QACI,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,qEAAiB;QACtC,QAAQ,EAAE;YACN,EAAE,IAAI,EAAE,EAAE,EAAE,UAAU,EAAE,MAAM,EAAE,SAAS,EAAE,MAAM,EAAE;YACnD,EAAE,IAAI,EAAE,MAAM,EAAE,SAAS,EAAE,yFAAoB,EAAE;YACjD,EAAE,IAAI,EAAE,UAAU,EAAE,SAAS,EAAE,yFAAoB,EAAE;YACrD,EAAE,IAAI,EAAE,MAAM,EAAE,SAAS,EAAE,yFAAoB,EAAE;SACpD;KACJ;CACJ,CAAC;AAOF,IAAa,qBAAqB,GAAlC,MAAa,qBAAqB;CAEjC;AADU,sCAAgB,GAAG,CAAC,qEAAiB,EAAE,yFAAoB,EAAE,yFAAoB,CAAC,CAAC;AADjF,qBAAqB;IALjC,8DAAQ,CAAC;QACN,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;QACxC,OAAO,EAAE,CAAC,4DAAY,CAAC;KAC1B,CAAC;GAEW,qBAAqB,CAEjC;AAFiC;;;;;;;;;;;;;ACxBlC;AAAe,6GAA8C,mJ;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAX;AAOlD,IAAa,iBAAiB,GAA9B,MAAa,iBAAiB;IAE5B,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;CAEF;AAPY,iBAAiB;IAL7B,+DAAS,CAAC;QACT,QAAQ,EAAE,cAAc;QACxB,sLAAwC;;KAEzC,CAAC;;GACW,iBAAiB,CAO7B;AAP6B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPW;AACM;AACmB;AACQ;AACzB;AACiB;AACf;AAcnD,IAAa,cAAc,GAA3B,MAAa,cAAc;CAAI;AAAlB,cAAc;IAZ1B,8DAAQ,CAAC;QACN,YAAY,EAAE,CAAC,8EAAqB,CAAC,gBAAgB,CAAC;QACtD,OAAO,EAAE;YACL,4DAAY;YACZ,8EAAqB;YACrB,qFAAqB;YACrB,4DAAU;YACV,0DAAW;YACX,kEAAmB;SACtB;QACD,SAAS,EAAE,CAAC,+DAAc,CAAC;KAC9B,CAAC;GACW,cAAc,CAAI;AAAJ","file":"products-products-module.js","sourcesContent":["export default \"<p>\\r\\n    Add/Edit product\\r\\n</p>\\r\\n\\r\\n<mat-card class=\\\"example-card\\\">\\r\\n    <form *ngIf=\\\"formGroup\\\" [formGroup]=\\\"formGroup\\\">\\r\\n        <div class=\\\"example-container\\\">\\r\\n            <mat-form-field>\\r\\n                <input matInput placeholder=\\\"Name\\\" formControlName=\\\"name\\\" type=\\\"text\\\">\\r\\n\\r\\n                <mat-error *ngIf=\\\"formGroup.get('name').touched && formGroup.get('name').errors && formGroup.get('name').errors.required\\\">\\r\\n                    Name required!\\r\\n                </mat-error>\\r\\n            </mat-form-field>\\r\\n\\r\\n            <mat-form-field>\\r\\n                <input matInput placeholder=\\\"Active Substance\\\" formControlName=\\\"activeSubstance\\\" type=\\\"text\\\">\\r\\n\\r\\n                <mat-error *ngIf=\\\"formGroup.get('activeSubstance').touched && formGroup.get('activeSubstance').errors && formGroup.get('activeSubstance').errors.required\\\">\\r\\n                    Active Substance required!\\r\\n                </mat-error>\\r\\n            </mat-form-field>\\r\\n\\r\\n            <mat-form-field>\\r\\n                <input matInput placeholder=\\\"Dosage\\\" formControlName=\\\"dosage\\\" type=\\\"number\\\">\\r\\n\\r\\n                <mat-error *ngIf=\\\"formGroup.get('dosage').touched && formGroup.get('dosage').errors && formGroup.get('dosage').errors.required\\\">\\r\\n                    Dosage required!\\r\\n                </mat-error>\\r\\n            </mat-form-field>\\r\\n\\r\\n            <mat-form-field appearance=\\\"fill\\\">\\r\\n                <select formControlName=\\\"formulation\\\" placeholder=\\\"Formulation\\\">\\r\\n                    <option *ngFor=\\\"let formulation of formulations\\\" [value]=\\\"formulation.value\\\">\\r\\n                        {{formulation.name}}\\r\\n                    </option>\\r\\n                </select>\\r\\n            </mat-form-field>\\r\\n\\r\\n            <mat-form-field appearance=\\\"fill\\\">\\r\\n                <select formControlName=\\\"onPrescription\\\" placeholder=\\\"OnPrescription\\\">\\r\\n                    <option *ngFor=\\\"let onPrescription of onPrescriptions\\\" [value]=\\\"onPrescription.value\\\">\\r\\n                        {{onPrescription.name}}\\r\\n                    </option>\\r\\n                </select>\\r\\n            </mat-form-field>\\r\\n\\r\\n            <mat-form-field>\\r\\n                <input matInput placeholder=\\\"RCP\\\" formControlName=\\\"rcp\\\" type=\\\"text\\\">\\r\\n\\r\\n                <mat-error *ngIf=\\\"formGroup.get('rcp').touched && formGroup.get('rcp').errors && formGroup.get('rcp').errors.required\\\">\\r\\n                    RCP required!\\r\\n                </mat-error>\\r\\n                <!--<mat-error *ngIf=\\\"rcp.hasError('pattern')\\\">\\r\\n                    Url Pattern Invalid\\r\\n                </mat-error>-->\\r\\n            </mat-form-field>\\r\\n\\r\\n        </div>\\r\\n        <div class=\\\"example-button-row\\\">\\r\\n            <button mat-raised-button color=\\\"primary\\\" (click)=\\\"save()\\\">Save</button>\\r\\n            <button mat-raised-button color=\\\"primary\\\" [routerLink]='routerLink'>Cancel</button>\\r\\n        </div>\\r\\n    </form>\\r\\n</mat-card>\\r\\n\"","export default \"<mat-paginator [length]=\\\"products?.totalItems\\\"\\r\\n               [pageSize]=\\\"products?.itemsPerPage\\\"\\r\\n               [pageSizeOptions]=\\\"[3,6]\\\"\\r\\n               (page)=\\\"pageEvent = loadProducts($event)\\\">\\r\\n</mat-paginator>\\r\\n\\r\\n<table mat-table [dataSource]=\\\"products?.items\\\" class=\\\"mat-elevation-z8\\\">\\r\\n\\r\\n    <ng-container matColumnDef=\\\"name\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef style=\\\"width:20%\\\"> Name </th>\\r\\n        <td mat-cell *matCellDef=\\\"let product\\\"> {{product.name}} </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"activeSubstance\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef style=\\\"width:20%\\\"> Active Substance </th>\\r\\n        <td mat-cell *matCellDef=\\\"let product\\\"> {{product.activeSubstance}} </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"dosage\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef style=\\\"width:20%\\\"> Dosage </th>\\r\\n        <td mat-cell *matCellDef=\\\"let product\\\"> {{product.dosage}} </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"formulation\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef style=\\\"width:20%\\\"> Formulation </th>\\r\\n        <td mat-cell *matCellDef=\\\"let product\\\"> {{product.formulation}} </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"onPrescription\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef style=\\\"width:10%\\\"> Prescription Needed </th>\\r\\n        <td mat-cell *matCellDef=\\\"let product\\\"> {{product.onPrescription}} </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"totalSupplier\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef style=\\\"width:23%\\\"> Number of Suppliers </th>\\r\\n        <td mat-cell *matCellDef=\\\"let product\\\"> {{product.totalSupplier}} </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"rcp\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef style=\\\"width:20%\\\"> RCP </th>\\r\\n        <td mat-cell *matCellDef=\\\"let product\\\"><a href=\\\"{{product.rcp}}\\\">a</a> </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- Action Column -->\\r\\n    <ng-container matColumnDef=\\\"action\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef style=\\\"width:10%\\\"> Action </th>\\r\\n        <td mat-cell *matCellDef=\\\"let product\\\">\\r\\n            <button mat-icon-button matTooltip=\\\"Edit\\\" [matTooltipPosition]=\\\"'after'\\\">\\r\\n                <mat-icon aria-label=\\\"Example icon-button with a heart icon\\\" [routerLink]=\\\"['../edit', product.id]\\\">edit</mat-icon>\\r\\n            </button>\\r\\n\\r\\n            <button mat-icon-button matTooltip=\\\"Delete\\\" [matTooltipPosition]=\\\"'after'\\\">\\r\\n                <mat-icon aria-label=\\\"Example icon-button with a heart icon \\\" (click)=\\\"delete(product)\\\">delete</mat-icon>\\r\\n            </button>\\r\\n        </td>\\r\\n    </ng-container>\\r\\n\\r\\n\\r\\n    <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n    <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n\\r\\n</table>\\r\\n\\r\\n<div class=\\\"example-button-row\\\">\\r\\n    <button mat-raised-button [routerLink]='[\\\"../edit\\\"]' class=\\\"btn btn-dark\\\"><b>+</b></button>\\r\\n</div>\\r\\n\"","export default \"<router-outlet></router-outlet>\\r\\n\"","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Byb2R1Y3RzL3Byb2R1Y3QtZWRpdC9wcm9kdWN0LWVkaXQuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { ProductService } from '../product.service';\r\nimport { Product } from '../product.model';\r\n\n@Component({\n    selector: 'app-product-edit',\n    templateUrl: './product-edit.component.html',\n    styleUrls: ['./product-edit.component.css']\n})\nexport class ProductEditComponent implements OnInit {\n\n    private routerLink: string = '../list';\n\n    private prodid: number;\n\n    private isEdit: boolean = false;\n\n    public formGroup: FormGroup;\n\n    public urlpattern = /(^|\\s)((https?:\\/\\/)?[\\w-]+(\\.[\\w-]+)+\\.?(:\\d+)?(\\/\\S*)?)/gi\n\n    public formulations = [\r\n        { value: 0, name: \"tablet\" },\r\n        { value: 1, name: \"capsule\" },\r\n        { value: 2, name: \"suppository\" },\n        { value: 3, name: \"suspension\" },\n        { value: 4, name: \"solution\" },\n        { value: 5, name: \"injectable\" },\n        { value: 6, name: \"perfuzable\" },\n        { value: 7, name: \"IUD\" },\n    ];\n\n    public onPrescriptions = [\r\n        { value: false, name: \"no\" },\n        { value: true, name: \"yes\" },\n    ];\n\n    constructor(\n        private router: Router,\n        private route: ActivatedRoute,\n        private productService: ProductService,\n        private formBuilder: FormBuilder) { }\n\n    ngOnInit() {\n\n        this.prodid = parseInt(this.route.snapshot.params['id']);\n\n        if (this.prodid) {\n            this.routerLink = '../../list';\n\n            this.productService.getProduct(this.prodid).subscribe(res => {\n                this.initForm(res);\n                this.isEdit = true;\n            });\n        }\n        else {\n            this.initForm(<Product>{});\n        }\n    }\n\n    save() {\n        Object.keys(this.formGroup.controls).forEach(control => {\n            this.formGroup.get(control).markAsTouched();\n        });\n\n        if (this.formGroup.valid) {\n            let product = this.formGroup.value as Product;\n\n            if (this.isEdit) {\n                product.id = this.prodid;\n\n                this.productService.update(product).subscribe(res => {\n                    this.router.navigate(['/products']);\n                });\n            } else {\n\n                this.productService.save(product).subscribe(res => {\n                    this.router.navigate(['/products']);\n                });\n            }\n        }\n    }\n\n    initForm(product: Product) {\n        this.formGroup = this.formBuilder.group({\n            name: [product.name, Validators.required],\n            activeSubstance: [product.activeSubstance, Validators.required],\n            dosage: [product.dosage, Validators.required],\n            formulation: [product.formulation, [Validators.required]],\n            onPrescription: [product.onPrescription, [Validators.required]],\n            rcp: [product.rcp, [Validators.required, Validators.pattern(this.urlpattern)]],\n        });\n    }\n\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Byb2R1Y3RzL3Byb2R1Y3QtbGlzdC9wcm9kdWN0LWxpc3QuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\r\nimport { PaginatedProductView } from '../paginatedproductview';\r\nimport { PageEvent } from '@angular/material/paginator';\r\nimport { ProductService } from '../product.service';\r\nimport { Router } from '@angular/router';\r\nimport { Product } from '../product.model';\r\n\r\n@Component({\r\n  selector: 'app-product-list',\r\n    templateUrl: './product-list.component.html',\r\n    styleUrls: ['./product-list.component.css']\r\n})\r\nexport class ProductListComponent implements OnInit {\r\n\r\n    displayedColumns: string[] = ['name', 'activeSubstance', 'dosage', 'formulation',\r\n        'onPrescription', 'totalSupplier', 'rcp', 'action'];\r\n    products: PaginatedProductView;\r\n    pageEvent: PageEvent;\r\n\r\n    constructor(private productService: ProductService, private router: Router) { }\r\n\r\n    ngOnInit() {\r\n        this.loadProducts(null);\r\n    }\r\n\r\n    loadProducts(event?: PageEvent) {\r\n        this.productService.getProducts(event)\r\n            .subscribe(res => {\r\n                this.products = res;\r\n                console.log(this.products.items);\r\n            });\r\n    }\r\n\r\n    delete(product: Product) {\r\n        this.productService.delete(product.id).subscribe(x => {\r\n            this.loadProducts();\r\n        });\r\n    }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { ApplicationService } from '../core/services/application.service';\r\nimport { Observable } from 'rxjs';\r\nimport { PageEvent } from '@angular/material/paginator';\r\nimport { Product } from './product.model';\r\nimport { PaginatedProductView } from './paginatedproductview';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProductService {\r\n\r\n    constructor(private httpClient: HttpClient, private applicationService: ApplicationService) {\r\n    }\r\n\r\n    getProducts(event?: PageEvent): Observable<PaginatedProductView> {\r\n        let pageIndex = event ? event.pageIndex + \"\" : \"0\";\r\n        let itemsPerPage = event ? event.pageSize + \"\" : \"3\";\r\n        let params = new HttpParams().set(\"page\", pageIndex).set(\"itemsPerPage\", itemsPerPage); //Create new HttpParams\r\n        return this.httpClient.\r\n            get<PaginatedProductView>(`${this.applicationService.baseUrl}api/product`, { params: params });\r\n    }\r\n\r\n    getProduct(id: number): Observable<Product> {\r\n        return this.httpClient\r\n            .get<Product>(`${this.applicationService.baseUrl}api/product/${id}`);\r\n    }\r\n\r\n    save(product: Product): Observable<Product> {\r\n        return this.httpClient\r\n            .post<Product>(`${this.applicationService.baseUrl}api/product`, product);\r\n    }\r\n\r\n    update(product: Product): Observable<Product> {\r\n        return this.httpClient\r\n            .put<Product>(`${this.applicationService.baseUrl}api/product/${product.id}`, product);\r\n    }\r\n\r\n    delete(id: number): Observable<any> {\r\n        return this.httpClient\r\n            .delete<Product>(`${this.applicationService.baseUrl}api/product/${id}`);\r\n    }\r\n\r\n    filter(substance: string): Observable<PaginatedProductView> {\r\n        if (!substance) substance = \"\";\r\n        return this.httpClient.get<PaginatedProductView>(`${this.applicationService.baseUrl}api/product?name=${name}`);\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ProductListComponent } from './product-list/product-list.component';\r\nimport { ProductEditComponent } from './product-edit/product-edit.component';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { ProductsComponent } from './products.component';\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: '', component: ProductsComponent,\r\n        children: [\r\n            { path: '', redirectTo: 'list', pathMatch: 'full' },\r\n            { path: 'list', component: ProductListComponent },\r\n            { path: 'edit/:id', component: ProductEditComponent },\r\n            { path: 'edit', component: ProductEditComponent },\r\n        ]\r\n    }\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule]\r\n})\r\n\r\nexport class ProductsRoutingModule {\r\n    static routedComponents = [ProductsComponent, ProductListComponent, ProductEditComponent];\r\n}\r\n\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Byb2R1Y3RzL3Byb2R1Y3RzLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-products',\n  templateUrl: './products.component.html',\n  styleUrls: ['./products.component.css']\n})\nexport class ProductsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ProductsRoutingModule } from './products-routing.module';\r\nimport { AngularMaterialModule } from '../shared/angular-material.module';\r\nimport { CoreModule } from '../core/core.module';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { ProductService } from './product.service';\r\n\r\n@NgModule({\r\n    declarations: [ProductsRoutingModule.routedComponents],\r\n    imports: [\r\n        CommonModule,\r\n        ProductsRoutingModule,\r\n        AngularMaterialModule,\r\n        CoreModule,\r\n        FormsModule,\r\n        ReactiveFormsModule\r\n    ],\r\n    providers: [ProductService]\r\n})\r\nexport class ProductsModule { }\r\n"],"sourceRoot":"webpack:///"}